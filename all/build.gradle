import java.util.stream.Collectors

def projectList = rootProject.subprojects.stream().filter {
    !["bom", "auth", name].contains(it.name)
}.collect(Collectors.toSet())

dependencies {
    projectList.each {
        compile(it)
    }
}

sourceJar.enabled = false

javadoc {
    failOnError false
    title = "Gltich ${rootProject.version} API"

    options {
        windowTitle = "Glitch ${rootProject.version}"
        addStringOption "Xdoclint:none", "-quiet"
        author true
    }
    projectList.each {
        source += it.javadoc.source
        classpath += it.javadoc.classpath
        excludes += it.javadoc.excludes
        includes += it.javadoc.includes
    }
}

dokka {
    moduleName = rootProject.name
    sourceDirs = projectList.stream().flatMap { it.dokka.sourceDirs.stream() }.collect(Collectors.toList())
    sourceRoots = projectList.stream().flatMap { it.dokka.sourceRoots.stream() }.collect(Collectors.toList())
}