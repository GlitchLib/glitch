import java.text.SimpleDateFormat

apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"
apply plugin: "com.jfrog.artifactory"
apply plugin: "com.gorylenko.gradle-git-properties"

private static def timestamp() {
    SimpleDateFormat sdf = new SimpleDateFormat("MMM dd yyyy HH:mm:ss zzz", Locale.ENGLISH)
    sdf.setTimeZone(TimeZone.getTimeZone("GMT"))
    return sdf.format(new Date())
}

def bintrayUser = System.getenv("BINTRAY_USER") ?: findProperty("bintray.user").toString()
def bintrayApiKey = System.getenv("BINTRAY_API_KEY") ?: findProperty("bintray.api_key").toString()
def sonatypeUser = System.getenv("CENTRAL_USER") ?: findProject("central.user").toString()
def sonatypePassword = System.getenv("CENTRAL_PASSWORD") ?: findProject("central.password").toString()
def branch = System.getenv("TRAVIS_BRANCH")
def hasTags = System.getenv("TRAVIS_TAG") != null

gitProperties {
    extProperty = "gitProperty"
    keys = [
            "git.commit.id",
            "git.commit.id.abbrev",
            "git.closest.tag.name",
            "git.closest.tag.commit.count",
            "git.commit.id.describe"
    ]
    dateFormatTimeZone = "GMT"
    customProperty("application.name", rootProject.name)
    customProperty("application.module", archivesBaseName)
    customProperty("application.version", project.version)
    customProperty("application.description", project.description ?: rootProject.description)
}

jar {
    manifest {
        attributes([
                'Manifest-Version': '1.0',
                'Created-By': "Gradle ${gradle.gradleVersion} - JDK ${System.getProperty("java.specification.version")} (${System.getProperty("java.version")})",
                'Implementation-Title': rootProject.name,
                'Implementation-Vendor': archivesBaseName,
                'Implementation-Version': version,
                'Implementation-Date': timestamp()
        ])
    }
}

task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds the sourcesJar.', group: 'build') {
    from sourceSets.main.allSource
    classifier = "sources"
}

task javadocJar(type: Jar,
        dependsOn: javadoc,
        description: "Builds the javadocJar.",
        group: "build") {
    from javadoc.destinationDir
    classifier = "javadoc"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


publishing {
    publications {
        maven(MavenPublication) {
            artifactId archivesBaseName
            if (project != project(":all")) {
                from components.java
                artifact sourcesJar
            }
            artifact javadocJar
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = [ 'maven' ]
    dryRun = false
    publish = false
    override = false
    pkg {
        userOrg = bintrayUser
        repo = "GlitchLib"
        name = rootProject.name
        desc = rootProject.description
        licenses = [ "LGPL-3.0" ]
        publicDownloadNumbers = true
        version {
            name = rootProject.version
            vcsTag = "v${rootProject.version}"
            released = Calendar.getInstance(TimeZone.getTimeZone("GMT")).time
        }
    }
}